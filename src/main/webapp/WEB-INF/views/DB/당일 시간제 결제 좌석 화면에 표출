당일 시간제 좌석 결제 이후 화면에 뿌려주는 기능 구현하기

//------------------------------------------------
##### 키오스크 컨트롤러(KioskController)
//------------------------------------------------
//당일 좌석, 당일 스터디룸 좌석 번호 선택 페이지
	@RequestMapping("chooseSeatNum")
	public String chooseSeatNum(HttpServletRequest request, Model model) {
		model.addAttribute("title", request.getParameter("title"));
		
		
		// 당일 좌석 좌석 확인 구현하기
		
		
		
		
		ks = new UpdateSeatInfo();
		ks.execute(model);

		if(request.getParameter("title").equals("p")) {
			//당일좌석 사용자 유무
//			us.seatPState(model);

		}else {
			//스터디룸 사용자 유무
//			us.roomPState(model);
		}

		return "chooseSeatNum";
	}
//------------------------------------------------


//------------------------------------------------
######  kiost.study.service.UpdateSeatInfo
//------------------------------------------------
public class UpdateSeatInfo implements KioskService {

	@Override
	public void execute(Model model) {
		studyDAO dao = new studyDAO();
		dao.updateSeatInfo();
	}
}
//------------------------------------------------


//------------------------------------------------
######  kiosk.study.dao.studyDAO
//------------------------------------------------

//당일 좌석 카테고리 선택 시(배치도 보여줄때마다 작동) 좌석 사용중인지 확인해서 시간 지난건 지우고, 시간 지나지 않은건 그대로..
	//select EndTIME from study_TimeSet where EndTIME<to_char(sysdate, 'yy/MM/dd hh:mi');
	public void updateSeatInfo() {
		String sql ="update kiosk set timeNum = null, peopleNum = null, totalMoney = null, phoneNum = null, STARTTIME = null, EndTime = null "
				+ "where EndTIME < to_char(sysdate, 'yy/MM/dd hh:mi')";
		template.update(sql);
	}

//------------------------------------------------


//------------------------------------------------
######  kiost.study.service.UserSeatSelectService
//------------------------------------------------

public class UserSeatSelectService{

	// 당일시간제 좌석 사용 확인
	public void seatPState(Model model){
		ShowSeatTableDAO dao = new ShowSeatTableDAO();
		model.addAttribute("seatState", dao.seatPState());
	}
}
//------------------------------------------------



//------------------------------------------------
######  kiost.study.service.UserSeatSelectService
//------------------------------------------------

public class ShowSeatTableDAO {
	private JdbcTemplate template;
	public ShowSeatTableDAO() {this.template = Constant.template;}
	
	//당일좌석 현재 배치도 확인
	public ArrayList<ShowSeatTableDTO> seatPState() {	
		ArrayList<ShowSeatTableDTO> list = null;
		try {
			String sql = "select seatNum, endTime from study_TimeSet where seatNum<21 order by seatNum asc";
			list = (ArrayList<ShowSeatTableDTO>)template.query(sql, new BeanPropertyRowMapper<ShowSeatTableDTO>(ShowSeatTableDTO.class));
		} catch (Exception e) {}	
		
		return list;
	}
}
//------------------------------------------------






